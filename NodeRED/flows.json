[
    {
        "id": "d30d4b9b23ab91b6",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4078920de38fa659",
        "type": "mqtt in",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "topic": "orchard/espnow/C82B962F4886/orchard/espnow/estado",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc5c9554.5f0878",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "391156e891146389"
            ]
        ]
    },
    {
        "id": "1a72572412783930",
        "type": "mqtt in",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "topic": "orchard/espnow/C82B962F4886/orchard/espnow/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc5c9554.5f0878",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "7dfe4721c8614715",
                "ca85d4a3d6e72c17"
            ]
        ]
    },
    {
        "id": "7dfe4721c8614715",
        "type": "json",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "b5bfee4284c6c214",
                "59d5da8fd94752c8",
                "5099eaaef8c42299"
            ]
        ]
    },
    {
        "id": "4da6d7d2125f6c9b",
        "type": "ui_gauge",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "group": "399d5e7b42bd66d6",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad:",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "b5bfee4284c6c214",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mensaje.hum",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "4da6d7d2125f6c9b",
                "715d947a2d99e1ad"
            ]
        ]
    },
    {
        "id": "43156eacadd4d08d",
        "type": "mqtt in",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "topic": "orchard/espnow/ESP8266Client-3953556/connection",
        "qos": "2",
        "datatype": "auto",
        "broker": "ca9e89bf591e855c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 230,
        "y": 680,
        "wires": [
            [
                "9a49c71ccfd27780"
            ]
        ]
    },
    {
        "id": "9a49c71ccfd27780",
        "type": "ui_text",
        "z": "d30d4b9b23ab91b6",
        "group": "019f1eb5967ea1fd",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Conexión ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 480,
        "y": 720,
        "wires": []
    },
    {
        "id": "79fea27e48bd516c",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "Hora y fecha",
        "func": "var fecha = new Date (msg.payload);\nmsg.payload = fecha.toLocaleString(\"es-ES\",{\"timeZone\":\"Europe/Madrid\"});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "650526fd01a7dd8b"
            ]
        ]
    },
    {
        "id": "ca85d4a3d6e72c17",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "79fea27e48bd516c"
            ]
        ]
    },
    {
        "id": "650526fd01a7dd8b",
        "type": "ui_text",
        "z": "d30d4b9b23ab91b6",
        "group": "399d5e7b42bd66d6",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Último Dato: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "59d5da8fd94752c8",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mac",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "fbc159b4a044d304"
            ]
        ]
    },
    {
        "id": "fbc159b4a044d304",
        "type": "ui_text",
        "z": "d30d4b9b23ab91b6",
        "group": "019f1eb5967ea1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MAC:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 860,
        "y": 440,
        "wires": []
    },
    {
        "id": "1f312501eba22d07",
        "type": "ui_slider",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "label": "Limite",
        "tooltip": "",
        "group": "399d5e7b42bd66d6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 90,
        "y": 560,
        "wires": [
            [
                "b18f9e992db6bdeb"
            ]
        ]
    },
    {
        "id": "715d947a2d99e1ad",
        "type": "link out",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "links": [
            "d75f70775d599dca"
        ],
        "x": 785,
        "y": 500,
        "wires": []
    },
    {
        "id": "d75f70775d599dca",
        "type": "link in",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "links": [
            "715d947a2d99e1ad"
        ],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "ce8c9272a80d7d98"
            ]
        ]
    },
    {
        "id": "5b7c187a01139af4",
        "type": "ui_led",
        "z": "d30d4b9b23ab91b6",
        "order": 3,
        "group": "399d5e7b42bd66d6",
        "width": 0,
        "height": 0,
        "label": "ALARMA",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "",
        "x": 510,
        "y": 580,
        "wires": []
    },
    {
        "id": "5af8b56ba6b81f36",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "func": "msg.payload = flow.get(\"Limite\");\nvar limite = msg.payload;\nvar humedad = msg.variable;\n\nif (humedad < limite){\nmsg.payload = 1;\n}\nelse \nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 580,
        "wires": [
            [
                "5b7c187a01139af4"
            ]
        ]
    },
    {
        "id": "b18f9e992db6bdeb",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Limite",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 520,
        "wires": [
            [
                "5af8b56ba6b81f36"
            ]
        ]
    },
    {
        "id": "ce8c9272a80d7d98",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "variable",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 620,
        "wires": [
            [
                "5af8b56ba6b81f36"
            ]
        ]
    },
    {
        "id": "14baacb4a2461f79",
        "type": "mongodb out",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1030,
        "y": 320,
        "wires": []
    },
    {
        "id": "5099eaaef8c42299",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "+ fecha",
        "func": "msg.payload.date = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 320,
        "wires": [
            [
                "14baacb4a2461f79",
                "f8257eb51cf8d4cf"
            ]
        ]
    },
    {
        "id": "1dcc33825d8bc030",
        "type": "inject",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "f817b6b77ab84165"
            ]
        ]
    },
    {
        "id": "59ad19ad7122105e",
        "type": "mongodb in",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "operation": "find",
        "x": 390,
        "y": 860,
        "wires": [
            [
                "6d9c3d3089cf4c43",
                "57f0e5fd9262e4dc"
            ]
        ]
    },
    {
        "id": "6d9c3d3089cf4c43",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "genera datos gráfica",
        "func": "\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // añade datos a los arrays\n        arrayhum.push({x : msg.payload[i].date , y : msg.payload[i].mensaje.hum});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Humedad\"],\n        \"data\":[arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  \n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 920,
        "wires": [
            [
                "c53fb3cc73076ae1"
            ]
        ]
    },
    {
        "id": "f817b6b77ab84165",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "func": "var ms_per_minute = 60000;\nvar now_ms = new Date().getTime();\nvar unaño = new Date(now_ms-525600*ms_per_minute);\n\n\nmsg.payload={ \"date\":{\"$gte\" : unaño}};\nmsg.sort = {\"date\": -1};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 940,
        "wires": [
            [
                "59ad19ad7122105e"
            ]
        ]
    },
    {
        "id": "8c5c1caf18988820",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "func": "var ms_per_minute = 60000;\nvar now_ms = new Date().getTime();\nvar undia = new Date(now_ms-1440*ms_per_minute);\n\n\nmsg.payload={ \"date\":{\"$gte\" : undia}};\nmsg.sort = {\"date\": -1};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "901c7ed926da743a"
            ]
        ]
    },
    {
        "id": "901c7ed926da743a",
        "type": "mongodb in",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "operation": "find",
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "582211bc8996d9c6"
            ]
        ]
    },
    {
        "id": "1448d6f6626bb46e",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "func": "var ms_per_minute = 60000;\nvar now_ms = new Date().getTime();\nvar unasemana = new Date(now_ms-10080*ms_per_minute);\n\n\nmsg.payload={ \"date\":{\"$gte\" : unasemana}};\nmsg.sort = {\"date\": -1};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1240,
        "wires": [
            [
                "b09e7b83a00c572b"
            ]
        ]
    },
    {
        "id": "b09e7b83a00c572b",
        "type": "mongodb in",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "operation": "find",
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "dcc86bb050a90e35"
            ]
        ]
    },
    {
        "id": "cdb7f324f3bdebe5",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "func": "var ms_per_minute = 60000;\nvar now_ms = new Date().getTime();\nvar unmes = new Date(now_ms-43800*ms_per_minute);\n\n\nmsg.payload={ \"date\":{\"$gte\" : unmes}};\nmsg.sort = {\"date\": -1};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1400,
        "wires": [
            [
                "1a3f69666cb14833"
            ]
        ]
    },
    {
        "id": "1a3f69666cb14833",
        "type": "mongodb in",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "operation": "find",
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "765a59cc7289552b"
            ]
        ]
    },
    {
        "id": "582211bc8996d9c6",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "genera datos gráfica",
        "func": "\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // añade datos a los arrays\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].mensaje.hum});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Humedad\"],\n        \"data\":[arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  \n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1100,
        "wires": [
            [
                "96bfcc8e84ab0212"
            ]
        ]
    },
    {
        "id": "dcc86bb050a90e35",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "genera datos gráfica",
        "func": "\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // añade datos a los arrays\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].mensaje.hum});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Humedad\"],\n        \"data\":[arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  \n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1260,
        "wires": [
            [
                "96bfcc8e84ab0212"
            ]
        ]
    },
    {
        "id": "765a59cc7289552b",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "genera datos gráfica",
        "func": "\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // añade datos a los arrays\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].mensaje.hum});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Humedad\"],\n        \"data\":[arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  \n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1400,
        "wires": [
            [
                "96bfcc8e84ab0212"
            ]
        ]
    },
    {
        "id": "57f0e5fd9262e4dc",
        "type": "debug",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 880,
        "wires": []
    },
    {
        "id": "3ff683b0cdbc6742",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Consulta la humedad del sistema colocado en el huerto de Ciencias de la UMA. Puedo responderte a estos comandos:\\n/start\\n/humedad\";\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1700,
        "wires": [
            [
                "7a32bb3c4aa44eb4"
            ]
        ]
    },
    {
        "id": "94f66014c3fbc6bc",
        "type": "telegram receiver",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "bot": "7b11bed71813a8c0",
        "saveDataDir": "",
        "filterCommands": true,
        "x": 170.20741271972656,
        "y": 1634.8522872924805,
        "wires": [
            [
                "3ff683b0cdbc6742"
            ],
            []
        ]
    },
    {
        "id": "7a32bb3c4aa44eb4",
        "type": "telegram sender",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "bot": "7b11bed71813a8c0",
        "haserroroutput": false,
        "outputs": 1,
        "x": 970.2074127197266,
        "y": 1674.8522872924805,
        "wires": [
            []
        ]
    },
    {
        "id": "31a361b52906eea4",
        "type": "telegram command",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "7b11bed71813a8c0",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 130.20741271972656,
        "y": 1714.8522872924805,
        "wires": [
            [
                "3ff683b0cdbc6742"
            ],
            []
        ]
    },
    {
        "id": "d8da27654f8faf5e",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "ultimo registro",
        "func": "msg.mensaje=msg.payload;\nmsg.limit=1;\nmsg.sort={\"date\":-1};\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1840,
        "wires": [
            [
                "1f447f58a6b18d5f"
            ]
        ]
    },
    {
        "id": "dd77f40fd5073bbd",
        "type": "telegram command",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "command": "/humedad",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "7b11bed71813a8c0",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 120,
        "y": 1800,
        "wires": [
            [
                "d8da27654f8faf5e"
            ],
            []
        ]
    },
    {
        "id": "d5ea3a562e8b996e",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "mensaje respuesta",
        "func": "\nvar humedad = msg.payload[0].mensaje.hum\nvar fecha=msg.payload[0].date;\n\nmsg.payload=msg.mensaje;\n\nmsg.payload.content=\"La humedad es de \" +humedad+\"%\\n\";\nmsg.payload.content+=\"Fecha de consulta: \"+fecha.toLocaleString('es-ES', { timeZone: 'Europe/Madrid', hour12: false });\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1840,
        "wires": [
            [
                "7a32bb3c4aa44eb4"
            ]
        ]
    },
    {
        "id": "1f447f58a6b18d5f",
        "type": "mongodb in",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "operation": "find",
        "x": 490,
        "y": 1780,
        "wires": [
            [
                "d5ea3a562e8b996e"
            ]
        ]
    },
    {
        "id": "6e3114af6495389e",
        "type": "ui_button",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "group": "72392ec273908b01",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Último Mes",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1440,
        "wires": [
            [
                "cdb7f324f3bdebe5"
            ]
        ]
    },
    {
        "id": "6ae1640d371c801a",
        "type": "ui_button",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "group": "72392ec273908b01",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Última Semana",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1280,
        "wires": [
            [
                "1448d6f6626bb46e"
            ]
        ]
    },
    {
        "id": "2c3cc2cc9243ffeb",
        "type": "ui_button",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "group": "72392ec273908b01",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Últimas 24H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "8c5c1caf18988820"
            ]
        ]
    },
    {
        "id": "c53fb3cc73076ae1",
        "type": "ui_chart",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "group": "e18675c0e8491a0e",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "REGISTRO",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "96bfcc8e84ab0212",
        "type": "ui_chart",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "group": "72392ec273908b01",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Historial",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "76957bc9d6133b29",
        "type": "http response",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=registros.csv"
        },
        "x": 1190,
        "y": 2040,
        "wires": []
    },
    {
        "id": "907bbd13c78527ef",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(global.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2040,
        "wires": [
            [
                "76957bc9d6133b29"
            ]
        ]
    },
    {
        "id": "f2ba18e3bc14fa05",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "consulta",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nmsg.payload=\n[\n    { \"$match\": { \"date\": { \"$gte\": inicio , \"$lte\": final } } },\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"humedad\": \"$mensaje.hum\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2040,
        "wires": [
            [
                "52f6b8213044b2a8"
            ]
        ]
    },
    {
        "id": "3b451e1f913ea986",
        "type": "http in",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "url": "/registros",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 116.99996185302734,
        "y": 2039.999979019165,
        "wires": [
            [
                "f2ba18e3bc14fa05"
            ]
        ]
    },
    {
        "id": "52f6b8213044b2a8",
        "type": "mongodb in",
        "z": "d30d4b9b23ab91b6",
        "mongodb": "5882adecbe6c712e",
        "name": "",
        "collection": "HUMEDAD",
        "operation": "aggregate",
        "x": 555.0141830444336,
        "y": 2040.0056610107422,
        "wires": [
            [
                "5fe0c1a5fbc27f48"
            ]
        ]
    },
    {
        "id": "5fe0c1a5fbc27f48",
        "type": "csv",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date, humedad",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 820.9999694824219,
        "y": 2039.9999561309814,
        "wires": [
            [
                "907bbd13c78527ef"
            ]
        ]
    },
    {
        "id": "b585b0644d99c26c",
        "type": "ui_switch",
        "z": "d30d4b9b23ab91b6",
        "name": "separdor decimal",
        "label": "{{msg.topic}}",
        "tooltip": "",
        "group": "a4714f52a19c8d0b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 202.00292205810547,
        "y": 2544.9770517349243,
        "wires": [
            [
                "cbd9b7fd3daaeba9"
            ]
        ]
    },
    {
        "id": "f1c70892e2d7cace",
        "type": "inject",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 182.9999885559082,
        "y": 2467.8889331817627,
        "wires": [
            [
                "cbd9b7fd3daaeba9"
            ]
        ]
    },
    {
        "id": "cbd9b7fd3daaeba9",
        "type": "function",
        "z": "d30d4b9b23ab91b6",
        "name": "set global separador_decimal",
        "func": "if(msg.payload===true)\n{\n    global.set(\"separador_decimal\",\"coma\");\n    msg.topic=\"separador decimal = coma\";\n}\nelse\n{\n    global.set(\"separador_decimal\",\"punto\");\n    msg.topic=\"separador decimal = punto\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 2460,
        "wires": [
            [
                "b585b0644d99c26c"
            ]
        ]
    },
    {
        "id": "c9eaad3e3af00a33",
        "type": "ui_date_picker",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "label": "Fecha inicio",
        "group": "a4714f52a19c8d0b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 339.78123474121094,
        "y": 2235.733015537262,
        "wires": [
            [
                "af9ae6bb3bc776a9"
            ]
        ]
    },
    {
        "id": "cee9c797e7a050c6",
        "type": "ui_date_picker",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "label": "Fecha final",
        "group": "a4714f52a19c8d0b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 342.79258728027344,
        "y": 2284.727252960205,
        "wires": [
            [
                "ce9afacdf6b78eed"
            ]
        ]
    },
    {
        "id": "af9ae6bb3bc776a9",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "desde",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 535.7869110107422,
        "y": 2234.3949031829834,
        "wires": [
            []
        ]
    },
    {
        "id": "ce9afacdf6b78eed",
        "type": "change",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hasta",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 539.0141906738281,
        "y": 2285.2784576416016,
        "wires": [
            []
        ]
    },
    {
        "id": "9b4a5ba02f4420b6",
        "type": "inject",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 141.78973388671875,
        "y": 2260.153455734253,
        "wires": [
            [
                "c9eaad3e3af00a33",
                "cee9c797e7a050c6"
            ]
        ]
    },
    {
        "id": "a0fd17b62f60641f",
        "type": "comment",
        "z": "d30d4b9b23ab91b6",
        "name": "Controles para seleccionar fechas",
        "info": "",
        "x": 198.78972244262695,
        "y": 2163.6307401657104,
        "wires": []
    },
    {
        "id": "fd1d239dca3bf8aa",
        "type": "comment",
        "z": "d30d4b9b23ab91b6",
        "name": "Flujo para descarga de fichero",
        "info": "",
        "x": 188.01416778564453,
        "y": 1982.0056324005127,
        "wires": []
    },
    {
        "id": "3d1445f6bfdbba82",
        "type": "comment",
        "z": "d30d4b9b23ab91b6",
        "name": "Selector de separador decimal",
        "info": "",
        "x": 195.01415252685547,
        "y": 2407.5510578155518,
        "wires": []
    },
    {
        "id": "1905cd07fdfbbc3e",
        "type": "ui_template",
        "z": "d30d4b9b23ab91b6",
        "group": "a4714f52a19c8d0b",
        "name": "",
        "order": 3,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/registros\" class=\"button\">Descarga registros en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 121.99969863891602,
        "y": 2100.0000495910645,
        "wires": [
            []
        ]
    },
    {
        "id": "f8257eb51cf8d4cf",
        "type": "debug",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 400,
        "wires": []
    },
    {
        "id": "391156e891146389",
        "type": "debug",
        "z": "d30d4b9b23ab91b6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "fc5c9554.5f0878",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "399d5e7b42bd66d6",
        "type": "ui_group",
        "name": "SENSOR",
        "tab": "84f414fe3df71632",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca9e89bf591e855c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "019f1eb5967ea1fd",
        "type": "ui_group",
        "name": "DISPOSITIVO",
        "tab": "84f414fe3df71632",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5882adecbe6c712e",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "HumedadIoT",
        "name": ""
    },
    {
        "id": "7b11bed71813a8c0",
        "type": "telegram bot",
        "botname": "HumedadHuerta_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "72392ec273908b01",
        "type": "ui_group",
        "name": "Últimos Valores",
        "tab": "8638d76bce94c929",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e18675c0e8491a0e",
        "type": "ui_group",
        "name": "REGISTRO",
        "tab": "8638d76bce94c929",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4714f52a19c8d0b",
        "type": "ui_group",
        "name": "Grupo Descarga",
        "tab": "8638d76bce94c929",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "84f414fe3df71632",
        "type": "ui_tab",
        "name": "DATOS",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8638d76bce94c929",
        "type": "ui_tab",
        "name": "HISTÓRICO",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]